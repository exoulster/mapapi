areacode
address = '江苏省无锡市滨湖区梁溪路37号万达公寓12层'
res = poi.amap(keywords=paste(address_new, name))
address_new = str_replace(address, '靠近.+', '')
name = '万美达假日酒店'
res = poi.amap(keywords=paste(address_new, name))
address_new = str_replace(address, '靠近.+', '')
library(tidyverse)
address = '江苏省无锡市滨湖区梁溪路37号万达公寓12层'
address_new = str_replace(address, '靠近.+', '')
name = '万美达假日酒店'
res = poi.amap(keywords=paste(address_new, name))
poi.amap
devtools::load_all(".")
devtools::load_all(".")
res = poi.amap(keywords=paste(address_new, name))
res$parse() %>% fromJSON() %>% jsonedit()
library(rjson)
res$parse() %>% fromJSON() %>% jsonedit()
library(listviewer)
res$parse() %>% fromJSON() %>% jsonedit()
res = poi.amap(keywords=paste(address_new, name), extensions = 'all')
res$parse() %>% fromJSON() %>% jsonedit()
res = regeo.amap('120.265945,31.562447', poitype=100100)
res$parse() %>% fromJSON()
res$parse() %>% fromJSON() %>% jsonedit()
res = geo.amap(address=paste(address_new, name))
res$parse() %>% fromJSON() %>% jsonedit()
?poi.baidu
res = poi.baidu(query=paste(address_new, name), region='无锡市', coord_type='2')
res$parse() %>% fromJSON() %>% jsonedit()
res = regeo.baidu(lnglat='120.272657,31.56851')
res$parse() %>% fromJSON() %>% jsonedit()
province_list = dplyr::filter(areacode, level==1)
province_list
#' @import dplyr
province_list = areacode %>%
filter(level==1) %>%
pull(name)
province_list
#' @import dplyr
province_name = areacode %>%
filter(level==1) %>%
pull(name)
#' @import dplyr
province_name = areacode %>%
filter(level==1) %>%
pull(name)
province_name_short = province_name %>%
stringr::str_replace_all(c('市'='', '省'='', '维吾尔自治区'='', '回族自治区'='',
'壮族自治区'='', '自治区'=''))
province_name_short
city_name = areacode %>%
filter(level==2) %>%
pull(name)
city_name
city_name = areacode %>%
filter(level==2, name!='市辖区') %>%
pull(name) %>%
parse_address = function(address) {
}
city_name = areacode %>%
filter(level==2, name!='市辖区') %>%
pull(name)
city_name
city_name = areacode %>%
filter(level==2, !name %in% c('市辖区', '自治区直辖县级行政区划')) %>%
pull(name)
city_name
city_name_short = city_name %>%
stringr::str_replace_all(c('市'='', '[:alpha:]族自治州'='', ''))
city_name_short = city_name %>%
stringr::str_replace_all(c('市'='', '[:alpha:]族自治州'=''))
city_name_short
city_name_short = city_name %>%
stringr::str_replace_all(c('市'=''))
city_name_short
city_name = areacode %>%
filter(level==2, !name %in% c('市辖区', '自治区直辖县级行政区划',
'省直辖县级行政区划', '县')) %>%
pull(name)
city_name_short = city_name %>%
stringr::str_replace_all(c('市'=''))
city_name_short
devtools::install_github("ironholds/poster")
devtools::install_github("ironholds/poster")
library(poster)
address = '江苏省无锡市滨湖区梁溪路37号万达公寓12层'
address_new = str_replace(address, '靠近.+', '')
name = '万美达假日酒店'
parse_addr(paste0(address, name))
parse_addr(paste0(address, name)) %>% glimpse()
normalise_addr(paste0(address, name))
city(paste0(address, name))
library(shiny)
library(shinyWidgets)
?textInput
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
use_test('address')
library(devtools)
use_test('address')
get_city_list('北京')
devtools::load_all(".")
get_city_list('北京')
get_city_list('浙江')
areacode %>% filter(name=='浙江')
areacode %>% filter(name=='浙江省')
get_city_list('浙江省')
areacode %>% filter(name=='浙江省', level==1)
areacode %>% filter(name=='浙江省', level==1) %>% pull(code)
areacode %>% filter(name=='浙江省', level==1) %>% pull(code) %>% length()
areacode %>% filter(pcode==330000000000)
areacode %>% filter(pcode==330000000000, level==2)
areacode %>% filter(pcode==330000000000, level==2) %>% pull(name)
devtools::load_all(".")
get_city_list('浙江省')
get_city_list('浙江省')
get_city_list('浙江省')
areacode %>%
filter(pcode==code, level==2) %>%
pull(name)
areacode %>%
filter(pcode==code, level==2)
areacode %>%
filter(pcode==code)
areacode %>%
filter(as.character(pcode)==as.character(code))
areacode %>%
filter(pcode==330000000000)
code
code == 330000000000
areacode[areacode$pcode==330000000000,]
areacode %>%
dplyr::filter(pcode==330000000000)
areacode %>%
filter(pcode==330000000000)
areacode %>%
dplyr::filter(pcode==code)
code
areacode %>%
dplyr::filter(pcode==as.numeric(code))
areacode %>%
dplyr::filter(pcode==as.character(code))
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols('c'))
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(c('c', 'c', 'n', 'c')))
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(c(
code = col_character(),
code = col_character(),
code = col_numeric(),
code = col_character()
)))
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(c(
code = col_character(),
code = col_character(),
code = col_integer(),
code = col_character()
)))
areacode
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(c(
code = col_character(),
name = col_character(),
level = col_integer(),
pcode = col_character()
)))
areacode
usethis::use_data(areacode, internal=TRUE)
usethis::use_data(areacode, internal=TRUE, overwrite=TRUE)
areacode
acode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(c(
code = col_character(),
name = col_character(),
level = col_integer(),
pcode = col_character()
)))
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(c(
code = col_character(),
name = col_character(),
level = col_number(),
pcode = col_character()
)))
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(
code = col_character(),
name = col_character(),
level = col_number(),
pcode = col_character()
))
usethis::use_data(areacode, internal=TRUE, overwrite=TRUE)
areacode
get_city_list('浙江省')
code
rm(areacode)
areacode
devtools::load_all(".")
areacode
get_city_list('浙江省')
code
length(c)
length(code)
code = '330000000000'
areacode %>%
filter(pcode==code, level==2)
areacode %>%
filter(pcode==code)
areacode %>%
filter(pcode == code)
areacode
areacode %>%
dplyr::filter(pcode == code)
code
areacode %>%
dplyr::filter(pcode == '330000000000')
areacode %>% as.data.frame() %>%
dplyr::filter(pcode == '330000000000')
areacode %>% as.data.frame() %>%
dplyr::filter(pcode == code)
devtools::load_all(".")
get_city_list('浙江省')
get_city_list('浙江省')
devtools::load_all(".")
get_city_list('浙江省')
devtools::load_all(".")
get_city_list('浙江省')
devtools::load_all(".")
get_city_list('浙江省')
get_city_list('浙江省') -> code
areacode %>% filter(pcode==code)
areacode
areacode %>% filter(pcode==code)
areacode[areacode$pcode==code,]
areacode[areacode$pcode==code, ]
areacode[areacode$pcode==code,'name']
devtools::load_all(".")
get_city_list('浙江省')
devtools::load_all(".")
get_city_list('浙江省')
dplyr::filter
dplyr::filter.tbl_df
get_city_list('上海市')
devtools::load_all(".")
test(filter='address')
test(filter='address')
test(filter='address')
devtools::load_all(".")
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
use_package('rjson')
devtools::load_all(".")
poi.amap('五角场和颐', city='上海')
devtools::load_all(".")
poi.amap('五角场和颐', city='上海')
res = poi.amap('五角场和颐', city='上海')
class(res)
document()
document()
document()
is.successful(res)
res = poi.amap('五角场和颐', city='上海')
res
res$parse() %>% fromJSON()
res$parse() %>% fromJSON() %>% .[['pois']]
res$parse() %>% fromJSON() %>% .[['pois']][[1]]
res$parse() %>% fromJSON() %>% .[['pois']] %>% [[1]]
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]]
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% unlist()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% unlist() %>% as_tibble()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% unlist() %>% as.data.frame()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% unlist() %>% transpose()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% transpose()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% transpose() %>% as.data.frame()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% transpose() %>% as_tibble()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>%
as.data.frame()
res$parse() %>% fromJSON() %>% .[['pois']] %>% .[[1]] %>% unlist()
res = poi.baidu('五角场和颐', '上海')
res$parse() %>% fromJSON()
res$parse() %>% fromJSON() %>% results
res$parse() %>% fromJSON() %>% .[['results']]
devtools::load_all(".")
parse_poi.baidu(res)
devtools::load_all(".")
res = poi.baidu('五角场和颐', '上海')
parse_poi.baidu(res)
res
res$parse() %>% fromJSON %>% .[['results']] %>% .[[1]]
res = poi.amap('五角场和颐', '上海')
parse_poi(res)
l = list(a=1, b=2)
l$c
list(c=l$c)
l2 = list(c=l$c)
library(rlist)
list.if(l2, is.null)
list.if(l2, is.null) = NA
list.if(l2, is.null)
l2
l2[sapply(l2, is.null)]
l2[sapply(l2, is.null)] = NA
l2
list()
parse_poi.amap(res)
devtools::load_all(".")
parse_poi.amap(res)
devtools::load_all(".")
res = poi.baidu('五角场和颐', '上海')
parse_poi.baidu(res)
res
res$parse() %>% fromJSON()
res$parse() %>% fromJSON() %>% .[['results']] %>% .[[1]]
devtools::load_all(".")
parse_poi.baidu(res)
paste0('a', 'b')
devtools::load_all(".")
parse_poi.baidu(res)
parse_poi(res)
b = parse_poi(res)
res = poi.amap('五角场和颐', '上海')
a = parse_poi(res)
a
b
a
b
bind_cols(a, b)
bind_rows(a, b)
runApp('inst/poisearch')
runApp('inst/poisearch')
?sidebarPanel
runApp('inst/poisearch')
use_package('leaflet')
use_package('leafletCN')
regionNames()
library(leafletCN)
regionNames()
data
res.amap = poi.amap(keywords=input$address, city=input$city, types='酒店')
res.baidu = poi.baidu(query=input$address, region=input$city, tag='酒店')
data = bind_rows(c(type='amap_res', parse_poi(res.amap)),
c(type='baidu_res', parse_poi(res.baidu))
)
data = bind_rows(c(type='amap_res', parse_poi(a)),
c(type='baidu_res', parse_poi(b))
)
data = bind_rows(c(type='amap_res', a,)
c(type='baidu_res', b))
data = bind_rows(c(type='amap_res', parse_poi(a)),
c(type='baidu_res', parse_poi(b))
)
data = bind_rows(c(type='amap_res', a)
c(type='baidu_res', b))
data = bind_rows(c(type='amap_res', a)
c(type='baidu_res', b))
b
a
data = bind_rows(c(type='amap_res', a),
c(type='baidu_res', b))
data
data %>% separate(lnglat, c('lng', 'lat'))
data %>% separate_rows(lnglat, c('lng', 'lat'))
data %>% separate(lnglat, c('lng', 'lat'))
data %>% separate(col=lnglat, into=c('lng', 'lat'), sep=',')
devtools::load_all(".")
draw_amap(data)
devtools::load_all(".")
draw_amap(data)
devtools::load_all(".")
draw_amap(data)
?separate
devtools::load_all(".")
draw_amap(data)
data
data$label = data$type
draw_amap(data)
?poi.baidu
devtools::load_all(".")
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
?vvalidate
?validate
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
runApp('inst/poisearch')
data
use_test('leaflet')
res.amap = poi.amap(keywords=input$address, city=input$city, types='酒店')
address = '五角场和颐'
city = '上海'
res.amap = poi.amap(keywords=address, city=city, types='酒店')
res.baidu = poi.baidu(query=address, region=city, tag='酒店',
ret_coordtype = 'gcj02ll')
data = bind_rows(c(label='amap_res', parse_poi(res.amap)),
c(label='baidu_res', parse_poi(res.baidu))
)
data
devtools::load_all(".")
draw_map(data)
draw_amap(data)
devtools::load_all(".")
draw_amap(data)
devtools::load_all(".")
draw_amap(data)
devtools::load_all(".")
runApp('inst/poisearch')
devtools::load_all(".")
install()
usethis::use_data(areacode, overwrite=TRUE)
areacode = read_csv('data-raw/area_code_2018.csv.gz',
col_names = c('code', 'name', 'level', 'pcode'),
col_types = cols(
code = col_character(),
name = col_character(),
level = col_number(),
pcode = col_character()
))
usethis::use_data(areacode, overwrite=TRUE)
install()
areacode
devtools::load_all(".")
mapapi::areacode
devtools::load_all(".")
install()
mapapi::areacode
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
install()
devtools::load_all(".")
data('areacode', package = "mapapi")
usethis::use_data(areacode, overwrite=TRUE)
data('areacode', package = "mapapi")
devtools::load_all(".")
install()
devtools::load_all(".")
install()
devtools::load_all(".")
install()
install()
install()
document()
install()
install()
runApp('inst/poisearch')
launch_poi_search()
mapapi:::launch_poi_search()
document()
library(devtools)
document()
mapapi:::launch_poi_search()
document()
library(devtools)
document()
test()
regeo.baidu("120.30", sign = TRUE)
res.baidu = regeo.baidu("120.30", sign = TRUE)
res.baidu$parse()
res.baidu = regeo.baidu("120,30", sign = TRUE)
res.baidu$parse()
test()
mapapi:::launch_poi_search()
install()
library(devtools)
install()
mapapi:::launch_poi_search()
devtools::load_all("~/Documents/R Codes/mapapi")
mapapi:::launch_poi_search()
mapapi::get_city_list
install()
mapapi:::launch_poi_search()
attach('get_city_list')
library(mapapi)
launch_poi_search()
document()
library(devtools)
document()
install()
library(mapapi)
launch_poi_search()
document()
library(devtools)
document()
install()
install()
launch_poi_search()
launch_poi_search()
devtools::load_all(".")
launch_poi_search()
install()
